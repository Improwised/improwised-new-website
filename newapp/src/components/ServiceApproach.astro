---
import { getCollection } from "astro:content";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";


type ValidCollections = "approaches" | "approaches2" | "approaches3" | "approaches4";

const { collectionName } = Astro.props;
const serviceApproach = (await getCollection(
  collectionName as ValidCollections
)) as CollectionEntry<ValidCollections>[];


// const serviceApproach = await getCollection("approaches", ({ data }) => {
//   return data;
// });

---

<div class="md:pt-12 flex flex-col gap-12">
  {
    serviceApproach.map(({ data: { approaches } }) =>
      approaches.map((approach, index) => (
        <div class="grid md:grid-cols-2 gap-6 md:gap-16">
          <div class={`${index % 2 !== 0 ? "md:order-1" : ""} flex flex-col justify-center gap-2 md:gap-6`}>
            <p class="text-main-heading-color font-bold text-[18px] leading-[22px] md:text-[46px] md:leading-[52px] tracking-[0.02em] font-manrope">{approach.title}</p>
            <p class="small-text md:text-para font-inter text-fourth-color">{approach.description}</p>
          </div>
          <div class="flex justify-center md:min-w-[50%]" >
            <Image
              width={500}
              alt="approach object-cover"
              src={approach.image}
              data-aos={`${index % 2 === 0 ? "fade-left" : "fade-right"}`}
            />
          </div>
        </div>
      ))
    )
  }
</div>
